
::std::logical::Option::None { enum(_ enum(n0 n0)) }

::main { ::page_rank::main }

::page_rank::Node::new {
  fn(w0 tup(::std::data::Array::empty tup(::std::data::Array::empty w5)))
  ::std::numeric::F32::from_n32::cast = fn(w0 w4)
  ::std::numeric::F32::div::div = fn(+1.0 fn(w4 w5))
}

::std::numeric::F32::div::div { fn(@f32_div(n0 n1) fn(n0 n1)) }

::std::numeric::F32::from_n32::cast { fn(@n32_to_f32(0 n0) n0) }

::std::numeric::F32::add::add { fn(@f32_add(n0 n1) fn(n0 n1)) }

::page_rank::Graph::new {
  fn(dup57(w3 w4) w6)
  ::page_rank::Node::new = fn(w4 w5)
  ::std::data::List::new = fn(w3 fn(w5 w6))
}

::page_rank::Graph::connect::2 { x(x(tup(n0 tup(n1 n2)) tup(n0 tup(n3 n2))) x(dup76(n4 @n32_ne(0 ?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n5) ref(tup(tup(n6 tup(tup(dup484(dup609(n7 @n32_add(1 n8)) @n32_eq(0 ?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n7 x(ref(n9 n10) x(n11 _)))))) n9) n12)) n13) tup(tup(n6 tup(tup(n8 n10) n12)) n13))) n4)))) x(dup76(n14 @n32_ne(0 ?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n5 n3) ref(tup(tup(tup(dup484(dup609(n15 @n32_add(1 n16)) @n32_eq(0 ?(::std::data::Array::push_back::3 ::std::data::Array::push_back::2 x(n15 x(ref(n17 n18) x(n11 _)))))) n17) n19) n20) tup(tup(tup(n16 n18) n19) n20))) n14)))) _))) }

::page_rank::Graph::connect::3 { x(x(n0 n0) _) }

::page_rank::Graph::process::4 { enum(ref(tup(dup11(tup(dup484(n0 @n32_eq(0 ?(::std::data::Array::fold_unordered::3 ::std::data::Array::fold_unordered::2 x(n0 x(n1 x(+0.0 x(::std::numeric::F32::add::add n2))))))) n1) n3) tup(dup11(tup(dup566(@n32_to_f32(0 n4) dup76(n5 @n32_ne(0 ?(_ ::std::data::Array::for_each_independent::2 x(n5 x(n6 x(fn(n7 _) _))))))) n6) n8) n9)) tup(n3 tup(n8 n10))) x(dup93(dup19(@f32_mul(n9 @f32_div(n4 n7)) @f32_sub$(+1.0 @f32_div(n11 @f32_add(n2 n10)))) n12) x(dup94(@n32_to_f32(0 n11) n13) tup(dup76(n14 @n32_ne(0 ?(::std::data::List::Iter::iterator::next::3 ::std::data::List::Iter::iterator::next::2 x(x(n14 n15) x(x(n16 n17) enum(::page_rank::Graph::process::4 enum(_ x(n12 x(n13 tup(n15 n17)))))))))) n16)))) }

::std::data::List::Iter::iterator::next::2 { x(x(@n32_sub(1 n0) n0) x(x(ref(tup(n1 n2) tup(n3 n4)) ref(n2 n4)) enum(enum(ref(n1 n3) n5) enum(_ n5)))) }

::std::data::List::Iter::iterator::next::3 { x(x(n0 n0) x(x(ref(n1 n1) _) ::std::logical::Option::None)) }

::page_rank::Graph::print {
  fn(w1 fn(ref(w6 w20) _))
  ::std::data::List::iter = fn(w1 w14)
  ::page_rank::Graph::print::1 = x(x(w6 w20) x(0 w14))
}

::page_rank::Graph::print::1 { x(n0 x(n1 tup(dup76(n2 @n32_ne(0 ?(::std::data::List::Iter::iterator::next::3 ::std::data::List::Iter::iterator::next::2 x(x(n2 n3) x(x(n4 n5) enum(::page_rank::Graph::print::4 enum(::page_rank::Graph::print::5 x(n0 x(n1 tup(n3 n5)))))))))) n4))) }

::page_rank::Graph::print::4 { enum(ref(tup(n0 tup(n1 dup136(dup193(dup1840(dup1841(_ n2) @f32_ne(n2 ?(::std::numeric::F32::to_string::to_string::3 ::std::numeric::F32::to_string::to_string::2 x(n3 tup(@n32_add(n4 dup76(n5 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n6 @io_print_char(10 n7)) x(n5 tup(78 tup(111 tup(100 tup(101 tup(32 n8))))))))))) tup(n9 _)))))) n3) n10))) tup(n0 tup(n1 n10))) x(x(n6 n11) x(@n32_add(1 dup141(dup76(n12 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n12 tup(@n32_add(7 n4) tup(n8 tup(58 tup(32 n9)))))))) n13)) tup(dup76(n14 @n32_ne(0 ?(::std::data::List::Iter::iterator::next::3 ::std::data::List::Iter::iterator::next::2 x(x(n14 n15) x(x(n16 n17) enum(::page_rank::Graph::print::4 enum(::page_rank::Graph::print::5 x(x(n7 n11) x(n13 tup(n15 n17)))))))))) n16)))) }

::page_rank::Graph::print::5 { x(x(n0 n0) _) }

::std::numeric::N32::to_string::to_string::2 { x(dup76(n0 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n0 x(tup(0 tup(n1 n1)) n2))))) n2) }

::std::numeric::N32::to_string::to_string::3 { x(_ tup(1 tup(tup(48 n0) n0))) }

::std::numeric::N32::to_string::to_string::5 { x(dup165(@n32_rem(10 @n32_add$(48 n0)) @n32_div(10 dup76(n1 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::6 ::std::numeric::N32::to_string::to_string::5 x(n1 x(tup(n2 tup(tup(n0 n3) n4)) n5))))))) x(tup(@n32_add$(1 n2) tup(n3 n4)) n5)) }

::std::numeric::N32::to_string::to_string::6 { x(_ x(n0 n0)) }

::std::numeric::F32::to_string::to_string::2 { x(_ tup(3 tup(tup(78 tup(97 tup(78 n0))) n0))) }

::std::numeric::F32::to_string::to_string::3 { x(dup275(n0 @f32_eq(+inf ?(::std::numeric::F32::to_string::to_string::5 ::std::numeric::F32::to_string::to_string::4 x(n0 n1)))) n1) }

::std::numeric::F32::to_string::to_string::4 { x(_ tup(4 tup(tup(43 tup(105 tup(110 tup(102 n0)))) n0))) }

::std::numeric::F32::to_string::to_string::5 { x(dup275(n0 @f32_eq(-inf ?(::std::numeric::F32::to_string::to_string::7 ::std::numeric::F32::to_string::to_string::6 x(n0 n1)))) n1) }

::std::numeric::F32::to_string::to_string::6 { x(_ tup(4 tup(tup(45 tup(105 tup(110 tup(102 n0)))) n0))) }

::std::numeric::F32::to_string::to_string::7 { x(dup275(n0 @f32_eq(+0.0 ?(::std::numeric::F32::to_string::to_string::9 ::std::numeric::F32::to_string::to_string::8 x(n0 n1)))) n1) }

::std::numeric::F32::to_string::to_string::8 { x(@f32_div$(+1.0 dup286(_ @f32_lt$(+0.0 ?(::std::numeric::F32::to_string::to_string::12 ::std::numeric::F32::to_string::to_string::11 n0)))) n0) }

::std::numeric::F32::to_string::to_string::9 { x(dup285(n0 @f32_lt(+0.0 ?(::std::numeric::F32::to_string::to_string::15 ::std::numeric::F32::to_string::to_string::14 x(x(n0 dup286(n1 @f32_lt$(+100000.0 ?(::std::numeric::F32::to_string::to_string::18 ::std::numeric::F32::to_string::to_string::17 x(x(n1 dup217(@f32_to_n32(0 dup220(@n32_to_f32(0 n2) dup76(n3 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n3 tup(@n32_add(n4 n5) tup(n6 tup(46 n7))))))))) @f32_sub(n2 @f32_add(+1.0 @f32_mul(+100000.0 @f32_to_n32(0 dup76(n8 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n8 tup(@n32_add(n5 n9) tup(tup(_ n7) n10)))))))))))) tup(@n32_add(n9 n11) tup(n10 n12))))))) tup(@n32_add(0 n4) tup(n13 n6)))))) tup(n11 tup(n13 n12))) }

::std::numeric::F32::to_string::to_string::11 { tup(4 tup(tup(43 tup(48 tup(46 tup(48 n0)))) n0)) }

::std::numeric::F32::to_string::to_string::12 { tup(4 tup(tup(45 tup(48 tup(46 tup(48 n0)))) n0)) }

::std::numeric::F32::to_string::to_string::14 { x(x(@f32_sub$(-0.0 n0) n0) tup(1 tup(tup(45 n1) n1))) }

::std::numeric::F32::to_string::to_string::15 { x(x(n0 n0) tup(1 tup(tup(43 n1) n1))) }

::std::numeric::F32::to_string::to_string::17 { x(x(dup299(n0 @f32_le$(+10.0 ?(::std::numeric::F32::to_string::to_string::21 ::std::numeric::F32::to_string::to_string::20 x(x(n0 n1) x(0 dup76(n2 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n2 tup(@n32_add(2 n3) tup(n4 n5))))))))))) n1) tup(n3 tup(tup(101 tup(43 n4)) n5))) }

::std::numeric::F32::to_string::to_string::18 { x(x(dup285(n0 @f32_lt(+1e-5 ?(::std::numeric::F32::to_string::to_string::23 ::std::numeric::F32::to_string::to_string::22 x(x(n0 n1) n2)))) n1) n2) }

::std::numeric::F32::to_string::to_string::20 { x(x(@f32_div(+10.0 dup299(n0 @f32_le$(+10.0 ?(::std::numeric::F32::to_string::to_string::21 ::std::numeric::F32::to_string::to_string::20 x(x(n0 n1) x(n2 n3)))))) n1) x(@n32_add(1 n2) n3)) }

::std::numeric::F32::to_string::to_string::21 { x(x(n0 n0) x(n1 n1)) }

::std::numeric::F32::to_string::to_string::22 { x(x(dup298(n0 @f32_le(+1.0 ?(::std::numeric::F32::to_string::to_string::26 ::std::numeric::F32::to_string::to_string::25 x(x(n0 n1) x(0 dup76(n2 @n32_ne(0 ?(::std::numeric::N32::to_string::to_string::3 ::std::numeric::N32::to_string::to_string::2 x(n2 tup(@n32_add(2 n3) tup(n4 n5))))))))))) n1) tup(n3 tup(tup(101 tup(45 n4)) n5))) }

::std::numeric::F32::to_string::to_string::23 { x(x(n0 n0) tup(0 tup(n1 n1))) }

::std::numeric::F32::to_string::to_string::25 { x(x(@f32_mul(+10.0 dup298(n0 @f32_le(+1.0 ?(::std::numeric::F32::to_string::to_string::26 ::std::numeric::F32::to_string::to_string::25 x(x(n0 n1) x(n2 n3)))))) n1) x(@n32_add(1 n2) n3)) }

::std::numeric::F32::to_string::to_string::26 { x(x(n0 n0) x(n1 n1)) }

::page_rank::main {
  fn(w1 _)
  ::page_rank::Graph::new = fn(w8 w9)
  ::std::rng::Pcg32::seeded = fn(tup(11 tup(tup(104 tup(101 tup(108 tup(108 tup(111 tup(32 tup(119 tup(111 tup(114 tup(108 tup(100 w27))))))))))) w27)) w12)
  ::page_rank::main::1 = x(w33 x(4000 x(x(w9 w31) x(w12 0))))
  ::page_rank::main::4 = x(1000 x(x(w31 w37) x(0 +0.85)))
  ::page_rank::Graph::print = fn(ref(w37 _) fn(w1 _))
  200 = dup310(w8 w33)
}

::page_rank::main::1 { x(n0 x(dup358(n1 n2) x(n3 x(n4 dup357(n5 @n32_lt(n2 ?(::page_rank::main::3 ::page_rank::main::2 x(n0 x(n1 x(n3 x(n4 n5))))))))))) }

::page_rank::main::2 { x(dup330(n0 dup330(n1 n2)) x(dup358(n3 n4) x(x(n5 n6) x(tup(dup2715(tup(@n32_shr(27 n7) dup2719(@n32_shr(13 @n32_xor(n8 @n32_xor(n7 @n32_rotr(n9 @n32_rem(n0 dup76(n10 @n32_ne(n11 ?(::page_rank::Graph::connect::3 ::page_rank::Graph::connect::2 x(x(n5 n12) x(n10 x(n13 _))))))))))) dup2719(@n32_shl(5 n8) @n32_shr(27 n9)))) tup(dup(@n32_mul(1284865837 dup(@n32_add(n14 dup2715(@n32_shr(27 n15) dup(@n32_mul(1284865837 dup(@n32_add(n16 n17) @n32_add_high(n18 n19))) dup(@n32_mul_high(1284865837 n20) @n32_mul(1481765933 @n32_add(n21 @n32_add(n20 @n32_add(n22 @n32_add(n19 n23))))))))) @n32_add_high(n24 n25))) dup(@n32_mul_high(1284865837 n26) @n32_mul(1481765933 @n32_add(n27 @n32_add(n26 @n32_add(n28 @n32_add(n25 dup2715(dup2719(@n32_shr(13 @n32_xor(n29 @n32_xor(n15 @n32_rotr(n30 @n32_rem(n1 dup77(n13 n11)))))) dup2719(@n32_shl(5 n29) @n32_shr(27 n30))) @n32_mul$(1284865837 n21))))))))) @n32_mul$(1284865837 n27))) dup2717(dup2717(n31 tup(dup(n16 n18) n22)) tup(dup(n14 n24) n28))) @n32_add(1 dup357(n32 @n32_lt(n4 ?(::page_rank::main::3 ::page_rank::main::2 x(n2 x(n3 x(x(n12 n6) x(tup(tup(n17 n23) n31) n32)))))))))))) }

::page_rank::main::3 { x(_ x(_ x(x(n0 n0) _))) }

::page_rank::main::4 { x(dup358(n0 n1) x(n2 x(dup357(n3 @n32_lt(n1 ?(::page_rank::main::6 ::page_rank::main::5 x(n0 x(n2 x(n3 n4)))))) n4))) }

::page_rank::main::5 { x(dup358(n0 n1) x(x(tup(dup929(n2 dup1200(n3 dup76(n4 @n32_ne(0 ?(::std::data::List::Iter::iterator::next::3 ::std::data::List::Iter::iterator::next::2 x(x(n4 n5) x(x(ref(n6 n7) n8) enum(::page_rank::Graph::process::4 enum(_ x(n9 x(n2 tup(n5 n8)))))))))))) tup(n6 n10)) n11) x(@n32_add(1 dup357(n12 @n32_lt(n1 ?(::page_rank::main::6 ::page_rank::main::5 x(n0 x(x(tup(n3 tup(n7 n10)) n11) x(n12 n13))))))) dup354(n9 n13)))) }

::page_rank::main::6 { x(_ x(x(n0 n0) _)) }

::std::data::Array::empty { tup(0 _) }

::std::data::Array::for_each_independent::2 { x(dup484(n0 @n32_eq(1 ?(::std::data::Array::Node::for_each_independent::3 ::std::data::Array::Node::for_each_independent::2 x(n1 x(n0 n2))))) x(n1 n2)) }

::std::data::Array::fold_unordered::2 { x(_ x(_ x(n0 x(_ n0)))) }

::std::data::Array::fold_unordered::3 { x(dup484(n0 @n32_eq(1 ?(::std::data::Array::Node::fold::3 ::std::data::Array::Node::fold::2 x(n1 x(n0 n2))))) x(n1 x(_ n2))) }

::std::data::Array::push_back::2 { x(_ x(ref(_ n0) x(n0 _))) }

::std::data::Array::push_back::3 { x(dup358(n0 @n32_lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n1 ref(n2 tup(n2 n3))) n0)))) x(n1 x(n3 _))) }

::std::data::Array::push_back::5 { x(x(ref(tup(n0 n1) tup(n2 n3)) n4) dup634(n5 @n32_rem(2 dup484(_ @n32_eq(0 ?(::std::data::Array::Node::half::3 ::std::data::Array::Node::half::2 x(x(n0 n2) x(x(n1 n3) x(n5 tup(n6 dup358(n7 @n32_lt$(1 ?(::std::data::Array::push_back::6 ::std::data::Array::push_back::5 x(x(n6 n4) n7)))))))))))))) }

::std::data::Array::push_back::6 { x(x(n0 n0) _) }

::std::data::Array::Node::half::2 { x(x(n0 n1) x(x(n2 n2) x(@n32_add(1 @n32_div(2 n3)) tup(ref(n0 n1) n3)))) }

::std::data::Array::Node::half::3 { x(x(n0 n0) x(x(n1 n2) x(@n32_div(2 n3) tup(ref(n1 n2) n3)))) }

::std::data::Array::Node::fold::2 { x(n0 x(_ x(_ n0))) }

::std::data::Array::Node::fold::3 { x(tup(n0 n1) x(dup908(@n32_add(1 @n32_div(2 dup484(n2 @n32_eq(1 ?(::std::data::Array::Node::fold::3 ::std::data::Array::Node::fold::2 x(n0 x(n2 x(n3 n4)))))))) @n32_div(2 dup484(n5 @n32_eq(1 ?(::std::data::Array::Node::fold::3 ::std::data::Array::Node::fold::2 x(n1 x(n5 x(n6 n7)))))))) x(dup909(fn(n4 fn(n7 n8)) dup909(n3 n6)) n8))) }

::std::data::Array::Node::for_each_independent::2 { x(n0 x(_ x(fn(n0 n1) n1))) }

::std::data::Array::Node::for_each_independent::3 { x(tup(n0 n1) x(dup924(@n32_add(1 @n32_div(2 dup484(n2 @n32_eq(1 ?(::std::data::Array::Node::for_each_independent::3 ::std::data::Array::Node::for_each_independent::2 x(n0 x(n2 x(n3 _)))))))) @n32_div(2 dup484(n4 @n32_eq(1 ?(::std::data::Array::Node::for_each_independent::3 ::std::data::Array::Node::for_each_independent::2 x(n1 x(n4 x(n5 _)))))))) x(dup925(n3 n5) _))) }

::std::data::List::new {
  fn(w0 fn(w1 w10))
  ::std::data::List::new::1 = x(w0 x(w1 x(tup(0 tup(w8 w8)) w10)))
}

::std::data::List::new::1 { x(dup358(n0 @n32_lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 n1)))) n1) }

::std::data::List::new::2 { x(@n32_sub(1 dup358(n0 @n32_lt$(0 ?(::std::data::List::new::3 ::std::data::List::new::2 x(n0 x(n1 x(tup(n2 tup(n3 n4)) n5))))))) x(dup947(n6 n1) x(tup(@n32_add(1 n2) tup(n3 tup(n6 n4))) n5))) }

::std::data::List::new::3 { x(_ x(_ x(n0 n0))) }

::std::data::List::get::2 { x(x(ref(tup(n0 n1) tup(n0 n2)) n3) @n32_sub(1 dup76(n4 @n32_ne(0 ?(::std::data::List::get::3 ::std::data::List::get::2 x(x(ref(n1 n2) n3) n4)))))) }

::std::data::List::get::3 { x(x(n0 n0) _) }

::std::data::List::IntoIter::iterator::next::2 { x(x(@n32_sub(1 n0) n0) x(x(tup(n1 n2) n2) enum(enum(n1 n3) enum(_ n3)))) }

::std::data::List::IntoIter::iterator::next::3 { x(x(n0 n0) x(x(n1 n1) ::std::logical::Option::None)) }

::std::data::List::iter { fn(ref(tup(dup1200(n0 n1) tup(n2 n3)) tup(n0 tup(n4 n3))) tup(n1 ref(n2 n4))) }

::std::data::List::into_iter { fn(tup(w0 tup(w1 _)) tup(w0 w1)) }

::std::numeric::N32::or::or { fn(@n32_or(n0 n1) fn(n0 n1)) }

::std::numeric::N64::from_n32::cast { fn(w0 tup(w0 0)) }

::std::numeric::N64::add::add { fn(tup(dup(@n32_add(n0 n1) @n32_add_high(n2 n3)) @n32_add(n4 @n32_add(n3 n5))) fn(tup(dup(n0 n2) n4) tup(n1 n5))) }

::std::numeric::N64::mul::mul { fn(tup(dup(@n32_mul(n0 n1) dup(@n32_mul_high(n2 n3) @n32_mul(n4 @n32_add(n5 @n32_add(n3 n6))))) n7) fn(tup(dup(n0 dup(n2 @n32_mul(n7 n5))) n4) tup(n1 n6))) }

::std::numeric::N64::or::or {
  fn(tup(w0 w1) fn(tup(w3 w4) tup(w10 w13)))
  ::std::numeric::N32::or::or = fn(w0 fn(w3 w10))
  ::std::numeric::N32::or::or = fn(w1 fn(w4 w13))
}

::std::rng::Pcg32::new {
  fn(w0 fn(w1 tup(w14 w16)))
  ::std::numeric::N64::from_n32::cast = fn(1 w4)
  ::std::numeric::N64::or::or = fn(w1 fn(w4 dup2708(w7 dup2708(w12 w16))))
  ::std::numeric::N64::add::add = fn(w0 fn(w7 w9))
  ::std::numeric::N64::mul::mul = fn(w9 fn(::std::rng::Pcg32::multiplier w11))
  ::std::numeric::N64::add::add = fn(w11 fn(w12 w14))
}

::std::rng::Pcg32::default {
  w2
  ::std::rng::Pcg32::new = fn(tup(3512640997 3405705229) fn(tup(4150755663 335903614) w2))
}

::std::rng::Pcg32::multiplier { tup(1284865837 1481765933) }

::std::rng::Pcg32::seeded {
  fn(dup2730(w8 _) w15)
  ::std::data::List::into_iter = fn(w8 w9)
  ::std::rng::Pcg32::seeded::1 = x(x(::std::rng::Pcg32::default w15) w9)
}

::std::rng::Pcg32::seeded::1 { x(n0 tup(dup76(n1 @n32_ne(0 ?(::std::data::List::IntoIter::iterator::next::3 ::std::data::List::IntoIter::iterator::next::2 x(x(n1 n2) x(x(n3 n4) enum(::std::rng::Pcg32::seeded::4 enum(::std::rng::Pcg32::seeded::5 x(n0 tup(n2 n4))))))))) n3)) }

::std::rng::Pcg32::seeded::4 { enum(n0 x(x(tup(tup(@n32_xor(0 dup(@n32_mul(1284865837 dup(@n32_add(n1 n2) @n32_add_high(n3 n4))) dup(@n32_mul_high(1284865837 n5) @n32_mul(1481765933 @n32_add(n6 @n32_add(n5 @n32_add(n7 @n32_add(n4 n8)))))))) @n32_xor(n0 @n32_mul$(1284865837 n6))) dup2726(n9 tup(dup(n1 n3) n7))) n10) tup(dup76(n11 @n32_ne(0 ?(::std::data::List::IntoIter::iterator::next::3 ::std::data::List::IntoIter::iterator::next::2 x(x(n11 n12) x(x(n13 n14) enum(::std::rng::Pcg32::seeded::4 enum(::std::rng::Pcg32::seeded::5 x(x(tup(tup(n2 n8) n9) n10) tup(n12 n14))))))))) n13))) }

::std::rng::Pcg32::seeded::5 { x(x(n0 n0) _) }

::std::IO::print::2 { x(x(@io_print_char(n0 n1) n2) x(@n32_sub(1 dup76(n3 @n32_ne(0 ?(::std::IO::print::3 ::std::IO::print::2 x(x(n1 n2) x(n3 n4)))))) tup(n0 n4))) }

::std::IO::print::3 { x(x(n0 n0) _) }

